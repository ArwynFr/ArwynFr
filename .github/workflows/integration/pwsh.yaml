name:

on:
  workflow_call:
    inputs:
      module:
        description: Path to the module root, relative to repository root
        required: true
        type: string
      pester:
        description: Path to the pester configuration file
        required: true
        type: string
      severity:
        decription: Severity of the script analyzer
        default: Warning
        required: false
        type: string
      coverage:
        description: Path to the coverage file generated by test script
        default: coverage.xml
        required: false
        type: string
    secrets:
      CODACY_PROJECT_TOKEN:
        required: true

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source files
        uses: actions/checkout@v3

      - shell: pwsh
        name: Test module manifest
        run: |
          $ModuleName = Split-Path '${{ inputs.module }}' -Leaf
          Test-ModuleManifest "${{ inputs.module }}/${ModuleName}.psd1"

      - shell: pwsh
        name: Run script analyzer
        run: |
          Import-Module -Force PSScriptAnalyzer
          Invoke-ScriptAnalyzer '${{ inputs.module }}' -Recurse -Severity '${{ inputs.severity }}'

      - shell: pwsh
        name: Run pester unit tests
        run: |
          Import-Module -Force Pester
          $Configuration = [PesterConfiguration]Import-PowerShellDataFile '${{ inputs.pester }}'
          $Configuration.CodeCoverage.OutputPath = ConvertPath '${{ github.workspace }}/${{ inputs.coverage }}'
          $Configuration.TestResult.OutputPath = ConvertPath '${{ github.workspace }}/${{ inputs.coverage }}'
          Invoke-Pester -Configuration $Configuration

      - name: Run Codacy coverage reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ inputs.coverage }}
